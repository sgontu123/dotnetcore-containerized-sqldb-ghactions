{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webAppName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 20
    },
    "containerRegistryName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 20
    },
    "containerImage": {
      "type": "string",
      "defaultValue":"DOCKER|mcr.microsoft.com/dotnet/core/samples:aspnetapp"
    },
    "sqlServerName": {
      "type": "string"
    },
    "dbAdminLogin": {
      "type": "string"
    },
    "dbAdminLoginPassword": {
      "type": "securestring"
    },
    "dbName": {
      "type": "string"
    },
    "dbCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "dbSkuName": {
      "type": "string",
      "defaultValue": "GP_S_Gen5_2",
      "allowedValues": [
        "GP_Gen4_1",
        "GP_Gen4_2",
        "GP_Gen4_3",
        "GP_Gen4_4",
        "GP_Gen4_5",
        "GP_Gen4_6",
        "GP_Gen4_7",
        "GP_Gen4_8",
        "GP_Gen4_9",
        "GP_Gen4_10",
        "GP_Gen4_16",
        "GP_Gen4_24",
        "GP_Gen5_2",
        "GP_Gen5_4",
        "GP_Gen5_6",
        "GP_Gen5_8",
        "GP_Gen5_10",
        "GP_Gen5_12",
        "GP_Gen5_14",
        "GP_Gen5_16",
        "GP_Gen5_18",
        "GP_Gen5_20",
        "GP_Gen5_24",
        "GP_Gen5_32",
        "GP_Gen5_40",
        "GP_Gen5_80",
        "GP_S_Gen5_1",
        "GP_S_Gen5_2",
        "GP_S_Gen5_4"
      ],
      "metadata": {
        "description": "Azure SQL Database SKU Name"
      }
    },
    "dbSkuSizeGB": {
      "type": "int",
      "minValue": 1,
      "maxValue": 1024,
      "defaultValue": 16,
      "metadata": {
        "description": "Azure SQL Database Storage Max Size in GB"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2",
        "P1v3",
        "P2v3",
        "P3v3"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    }
  },
  "variables": {
    "sqlServerName": "[parameters('sqlServerName')]",
    "webAppName": "[parameters('webAppName')]",
    "appServicePlanName": "[concat('plan-', variables('webAppName'))]",
    "containerRegistryName": "[parameters('containerRegistryName')]",
    "storageAccountName": "[tolower(replace(replace(concat('x', variables('webAppName')), '-',''), '_',''))]",
    "sqlDatabaseServerlessTiers": [
      "GP_S_Gen5_1",
      "GP_S_Gen5_2",
      "GP_S_Gen5_4"
    ]
  }, "resources": [
  {
    "type": "Microsoft.ContainerRegistry/registries",
    "apiVersion": "2019-12-01-preview",
    "name": "[variables('containerRegistryName')]",
    "location": "[resourceGroup().location]",
    "tags": {
      "app": "[variables('webAppName')]"
    },
    "sku": {
      "name": "Basic",
      "tier": "Basic"
    },
    "properties": {
      "adminUserEnabled": true,
      "policies": {
        "quarantinePolicy": {
          "status": "disabled"
        },
        "trustPolicy": {
          "type": "Notary",
          "status": "disabled"
        },
        "retentionPolicy": {
          "days": 7,
          "status": "disabled"
        }
      },
      "encryption": {
        "status": "disabled"
      },
      "dataEndpointEnabled": false,
      "publicNetworkAccess": "Enabled"
    }
  },
  {
    "name": "[variables('storageAccountName')]",
    "type": "Microsoft.Storage/storageAccounts",
    "location": "[resourceGroup().location]",
    "apiVersion": "2019-06-01",
    "sku": {
      "name": "Standard_LRS"
    },
    "dependsOn": [],
    "tags": {
      "app": "[variables('webAppName')]"
    },

    "kind": "StorageV2",
    "properties": {
      "accessTier": "Hot"
    }
  },
  {
    "name": "[variables('sqlServerName')]",
    "type": "Microsoft.Sql/servers",
    "location": "[resourceGroup().location]",
    "apiVersion": "2019-06-01-preview",
    "tags": {
      "app": "[variables('webAppName')]"
    },
    "properties": {
      "administratorLogin": "[parameters('dbAdminLogin')]",
      "administratorLoginPassword": "[parameters('dbAdminLoginPassword')]",
      "publicNetworkAccess": "Enabled"
    },
    "resources": [
      {
        "name": "[parameters('dbName')]",
        "type": "databases",
        "location": "[resourceGroup().location]",
        "tags": {
          "app": "[variables('webAppName')]"
        },
        "apiVersion": "2017-10-01-preview",
        "dependsOn": [
          "[concat('Microsoft.Sql/servers/', variables('sqlserverName'))]"
        ],
        "sku": {
          "name": "[parameters('dbSkuName')]",
          "tier": "GeneralPurpose"
        },
        "kind": "[concat('v12.0,user,vcore',if(contains(variables('sqlDatabaseServerlessTiers'),parameters('dbSkuName')),',serverless',''))]",
        "properties": {
          "collation": "[parameters('dbCollation')]",
          "maxSizeBytes": "[mul(mul(mul(parameters('dbSkuSizeGB'),1024),1024),1024)]"
        }
      },
      {
        "name": "AllowAllWindowsAzureIps",
        "type": "firewallrules",
        "location": "[resourceGroup().location]",
        "apiVersion": "2014-04-01-preview",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
        ],
        "properties": {
          "startIpAddress": "0.0.0.0",
          "endIpAddress": "0.0.0.0"
        }
      }
    ]
  },
  {
    "type": "Microsoft.Web/serverfarms",
    "apiVersion": "2020-06-01",
    "name": "[variables('appServicePlanName')]",
    "dependsOn": [
      "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
    ],
    "tags": {
      "app": "[variables('webAppName')]"
    },
    "location": "[resourceGroup().location]",
    "sku": {
      "name": "[parameters('skuName')]",
      "capacity": "[parameters('skuCapacity')]"
    },
    "kind": "linux",
    "properties": {
      "reserved": true
    }
  },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('webAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "tags": {
        "app": "[variables('webAppName')]",
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "empty"
      },
      "kind": "app,linux,container",
      "properties": {
        "name": "[variables('webAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('containerImage')]",
          "connectionStrings": [
            {
              "name": "MyDbConnection",
              "connectionString": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('dbName'), ';User Id=', parameters('dbAdminLogin'), '@', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('dbAdminLoginPassword'), ';')]",
              "type": "SQLAzure"
            }
          ]
        }
      },
      "resources": [
        {
          "condition": "[or(startsWith(parameters('skuName'),'S'),startsWith(parameters('skuName'),'P'))]",
          "apiVersion": "2015-08-01",
          "name": "staging",
          "type": "slots",
          "tags": {
            "app": "[variables('webAppName')]"
          },
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName'))]"
          ],
          "properties": {
          },
          "resources": []
        }
      ]
    }
]
}
